version: '3.8'

services:
  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    # ‚ùó Remove port mapping to avoid 5432 conflict (internal network is enough)
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cloudit-network

  cloudit-app:
    build: .   # Build Docker image from local Dockerfile
    container_name: cloudit-app
    restart: always
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      BASE_URL: ${BASE_URL}
      CLOUDINARY_NAME: ${CLOUDINARY_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      EMAIL_DOMAIN: ${EMAIL_DOMAIN}
    ports:
      - "9090:8080"   # App needs to expose itself externally
    depends_on:
      - postgres-db
    networks:
      - cloudit-network

volumes:
  postgres_data:

networks:
  cloudit-network:
    driver: bridge
